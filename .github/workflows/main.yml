# This is a basic workflow to help you get started with Actions

name: CI to DockerHub

# Controls when the workflow will run
on:
  # Triggers the workflow on push event but only for the master branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  
  run_linters:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
            # Full git history is needed to get a proper list of changed files within `super-linter`
            fetch-depth: 0
            
      # Run super-linter on all files      
      - name: Lint Code Base
        uses: docker://ghcr.io/github/super-linter:slim-v4
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: master
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      
  run_unit_tests:
    runs-on: ubuntu-latest
    needs: run_linters
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r python_app/requirements.txt
        
      - name: Run unit tests
        run: python3 python_app/tests.py
        
      
  
  build_and_push_docker_image:
    runs-on: ubuntu-latest
    needs: run_unit_tests
    steps:
      - uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./python_app/
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/devops:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
